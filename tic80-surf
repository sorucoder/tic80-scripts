#!/usr/bin/env bash

function print_usage() {
    printf "Usage: tic80-surf [options]\n\n"

    printf "This script starts the TIC-80 cartridge browser.\n"
    printf "Use tic80 for the normal binary.\n\n"

    printf "Options:\n"
    printf "\t-h, --help\tshow this help message and quit\n"
    printf "\t--noskip\tdon't skip startup animation\n"
    printf "\t--volume=<int>\tglobal volume value [0-15]\n"
    printf "\t--fullscreen\tenable fullscreen mode\n"
    printf "\t--vsync\t\tenable VSYNC\n"
    printf "\t--soft\t\tuse software rendering\n"
    printf "\t--scale=<int>\tmain window scale\n"
}

function quit() {
    unset options option value
    quit $1
}

# Check binary
if ! which tic80 &> /dev/null; then
    echo "error: tic80 not installed" > /dev/stderr
    quit 1
fi

# Prepare options
declare -a options=( --skip )
while [[ $1 =~ ^--? ]]; do
    option=$1
    if [[ $option =~ ^(-h|--help)$ ]]; then
        print_usage > /dev/stderr
        quit 0
    elif [[ $option =~ ^--noskip$ ]]; then
        options=( ${options[@]/^--skip$/} )
    elif [[ $option =~ ^(--fullscreen|--vsync|--soft|--crt)$ ]]; then
        options=( ${options[@]/$1/} )
        options+=( $option )
    elif [[ $OPTION =~ ^--volume ]]; then
        options=( ${options[@]/^--volume/} )
        if [[ $option =~ ^--volume$ ]]; then
            shift; value=$1
            if [[ ! $value =~ ^[0-9]+$ ]]; then
                printf "error: option \`--volume\` expectes an integer value" > /dev/stderr
                quit 1
            fi
            options+=( --volume=$value )
        elif [[ $option =~ ^--volume=[0-9]+$ ]]; then
            options+=( $option )
        else
            echo "error: option \`--volume\` expects an integer value" > /dev/stderr
            quit 1
        fi
    elif [[ $option =~ ^--scale ]]; then
        options=( ${options[@]/^--scale/} )
        if [[ $option == --scale ]]; then
            shift; value=$1
            if [[ ! $value =~ ^[0-9]+$ ]]; then
                printf "error: option \`--scale\` expectes an integer value" > /dev/stderr
                quit 1
            fi
            options+=( --scale=$value )
        elif [[ $option =~ ^--scale=[0-9]+$ ]]; then
            options+=( $option )
        else
            echo "error: option \`--scale\` expects an integer value" > /dev/stderr
            quit 1
        fi
    else
        echo "error: unknown option \`$option\`"
        print_usage > /dev/stderr
        quit 1
    fi
    shift
done

tic80 "${options[@]}" --cmd="surf"
quit $?